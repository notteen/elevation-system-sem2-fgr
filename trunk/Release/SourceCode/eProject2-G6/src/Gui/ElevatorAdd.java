/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package Gui;

import java.awt.Image;
import java.awt.event.KeyEvent;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import objects.Elevator;
import ultity.SQLTools;
import ultity.Tools;
import ultity.Validator;

/**
 *
 * @author ToanLM
 */
public class ElevatorAdd extends javax.swing.JDialog {

    public ElevatorAdd(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        initImage();
        setLocationRelativeTo(parent);
        setTitle("Add new Elevator");
    }

    private void initImage() {
        ImageIcon icon = new javax.swing.ImageIcon(getClass().getResource("/Images/no-available-image.png"));
        Image img = icon.getImage();
        float width = icon.getIconWidth();
        int height = icon.getIconHeight();
        int h = height;
        int w = (int) width;
        if (width > 135) {
            h = (int) (height / (width / 135));
            w = 135;
        }
        Image newimg = img.getScaledInstance(w, h, java.awt.Image.SCALE_SMOOTH);
        Icon newIcon = new ImageIcon(newimg);
        lbImage.setIcon(newIcon);
    }

    public void setImage(String path) {
        ImageIcon icon = new javax.swing.ImageIcon(txtImage.getText());
        Image img = icon.getImage();
        float width = icon.getIconWidth();
        int height = icon.getIconHeight();
        int h = height;
        int w = (int) width;
        if (width > 135) {
            h = (int) (height / (width / 135));
            w = 135;
        }
        Image newimg = img.getScaledInstance(w, h, java.awt.Image.SCALE_SMOOTH);
        Icon newIcon = new ImageIcon(newimg);
        lbImage.setIcon(newIcon);
    }

    public void AddElevator() {
        if ("".equals(txtNameElevator.getText()) || "".equals(txtTypeElevator.getText()) || cbWarranty.getSelectedIndex() == 0 || "".equals(txtImage.getText()) || "".equals(txtMadein.getText()) || "".equals(txtPrice.getText()) || "".equals(txtSpeed.getText()) || "".equals(txtWeight.getText())) {
            JOptionPane.showMessageDialog(this, "Please complete form");
        } else {
            Validator v = new Validator();
            String floatreg = "[-+]?[0-9]*\\.?[0-9]+([eE][-+]?[0-9]+)?";
            Boolean p = txtPrice.getText().matches(floatreg);
            Boolean w = txtWeight.getText().matches(floatreg);
            Boolean s = txtSpeed.getText().matches(floatreg);
            if (p == false) {
                JOptionPane.showMessageDialog(this, "Please confirm your price value. You can use Number and only one dot.");
            } else {
                if (w == false) {
                    JOptionPane.showMessageDialog(this, "Please confirm your weight value. You can use Number and only one dot.");
                } else {
                    if (s == false) {
                        JOptionPane.showMessageDialog(this, "Please confirm your speed value. You can use Number and only one dot.");
                    } else {
                        String name = v.ValidateString(txtNameElevator.getText());
                        String type = v.ValidateString(txtTypeElevator.getText());
                        Float price = v.ValidateFloat(txtPrice.getText());
                        Float weight = v.ValidateFloat(txtWeight.getText());
                        Float speed = v.ValidateFloat(txtSpeed.getText());
                        int warranty = cbWarranty.getSelectedIndex();
                        String madein = v.ValidateString(txtMadein.getText());
                        Tools tools = new Tools();
                        String image = tools.CoppyFile(txtImage.getText());
                        Elevator e = new Elevator(name, image, type, price, weight, speed, madein, warranty);
                        SQLTools t = new SQLTools();
                        int status = t.AddElevator(e);
                        if (status == 1) {
                            JOptionPane.showMessageDialog(this, "Add Elevator success");
                            AdminMain em = (AdminMain) this.getOwner();
                            em.initListElevator("", "");
                            dispose();
                        }
                    }
                }
            }

        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cbWarranty = new javax.swing.JComboBox();
        btnCancel = new javax.swing.JButton();
        txtMadein = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtNameElevator = new javax.swing.JTextField();
        txtSpeed = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        btnSumit = new javax.swing.JButton();
        txtWeight = new javax.swing.JTextField();
        txtTypeElevator = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtPrice = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtImage = new javax.swing.JTextField();
        btnUpload = new javax.swing.JButton();
        lbImage = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Add new Elevator");
        setResizable(false);

        cbWarranty.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Choose an Option", "1 Year", "2 Years", "3 Years" }));
        cbWarranty.setToolTipText("");

        btnCancel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/s_cancel.png"))); // NOI18N
        btnCancel.setText("Cancel");
        btnCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelActionPerformed(evt);
            }
        });

        txtMadein.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtMadeinKeyPressed(evt);
            }
        });

        jLabel10.setText("Made in:");

        txtNameElevator.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameElevatorKeyPressed(evt);
            }
        });

        txtSpeed.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtSpeedKeyPressed(evt);
            }
        });

        jLabel4.setText("Warranty:");

        jLabel8.setText("Speed:");

        btnSumit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/s_add.png"))); // NOI18N
        btnSumit.setText("Add");
        btnSumit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSumitActionPerformed(evt);
            }
        });

        txtWeight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtWeightActionPerformed(evt);
            }
        });
        txtWeight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtWeightKeyPressed(evt);
            }
        });

        txtTypeElevator.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtTypeElevatorKeyPressed(evt);
            }
        });

        jLabel3.setText("Type of :");

        jLabel2.setText("Name:");

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Add new Elevator");

        jLabel6.setText("Image of product:");

        jLabel5.setText("Price:");

        txtPrice.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtPriceKeyPressed(evt);
            }
        });

        jLabel7.setText("Weight limit:");

        txtImage.setEditable(false);
        txtImage.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txtImageMouseClicked(evt);
            }
        });

        btnUpload.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/s_browse.png"))); // NOI18N
        btnUpload.setText("Browse");
        btnUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUploadActionPerformed(evt);
            }
        });

        jLabel9.setText("USD");

        jLabel11.setText("Kg");

        jLabel12.setText("m/min");

        btnReset.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Icons/s_reset.png"))); // NOI18N
        btnReset.setText("Reset");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSumit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnReset)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel10))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txtNameElevator)
                                    .addComponent(txtTypeElevator, javax.swing.GroupLayout.DEFAULT_SIZE, 180, Short.MAX_VALUE)
                                    .addComponent(cbWarranty, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txtMadein)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(txtSpeed, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtWeight, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtPrice, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 90, Short.MAX_VALUE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel11)
                                            .addComponent(jLabel12))))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel6)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(txtImage, javax.swing.GroupLayout.PREFERRED_SIZE, 156, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(btnUpload)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(25, 25, 25)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtNameElevator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtTypeElevator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cbWarranty, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(txtWeight, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtSpeed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(jLabel12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(txtMadein, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSumit)
                    .addComponent(btnCancel)
                    .addComponent(btnReset))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtImage, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUpload))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbImage, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(40, 40, 40))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelActionPerformed
        dispose();
    }//GEN-LAST:event_btnCancelActionPerformed

    private void txtNameElevatorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameElevatorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddElevator();
        }
    }//GEN-LAST:event_txtNameElevatorKeyPressed

    private void btnSumitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSumitActionPerformed
        AddElevator();
    }//GEN-LAST:event_btnSumitActionPerformed

    private void txtWeightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtWeightActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtWeightActionPerformed

    private void txtTypeElevatorKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtTypeElevatorKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddElevator();
        }
    }//GEN-LAST:event_txtTypeElevatorKeyPressed

    private void btnUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUploadActionPerformed
        JFileChooser fchoose = new JFileChooser();
        FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
        fchoose.setFileFilter(imageFilter);
        int choose = fchoose.showDialog(this, "Select");
        if (choose == JFileChooser.APPROVE_OPTION) {
            File file = fchoose.getSelectedFile();
            String text = file.getPath();
            txtImage.setText(text);
            setImage(txtImage.getText());
        }
    }//GEN-LAST:event_btnUploadActionPerformed

    private void txtPriceKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPriceKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddElevator();
        }
    }//GEN-LAST:event_txtPriceKeyPressed

    private void txtWeightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtWeightKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddElevator();
        }
    }//GEN-LAST:event_txtWeightKeyPressed

    private void txtSpeedKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSpeedKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddElevator();
        }
    }//GEN-LAST:event_txtSpeedKeyPressed

    private void txtMadeinKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtMadeinKeyPressed
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            AddElevator();
        }
    }//GEN-LAST:event_txtMadeinKeyPressed

    private void txtImageMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txtImageMouseClicked
        if ("".equals(txtImage.getText())) {
            JFileChooser fchoose = new JFileChooser();
            FileNameExtensionFilter imageFilter = new FileNameExtensionFilter("Image files", ImageIO.getReaderFileSuffixes());
            fchoose.setFileFilter(imageFilter);
            int choose = fchoose.showDialog(this, "Select");
            if (choose == JFileChooser.APPROVE_OPTION) {
                File file = fchoose.getSelectedFile();
                String text = file.getPath();
                txtImage.setText(text);
                setImage(txtImage.getText());
            }
        }
    }//GEN-LAST:event_txtImageMouseClicked

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        txtImage.setText("");
        txtMadein.setText("");
        txtNameElevator.setText("");
        txtPrice.setText("");
        txtSpeed.setText("");
        txtTypeElevator.setText("");
        txtWeight.setText("");
        cbWarranty.setSelectedIndex(0);
    }//GEN-LAST:event_btnResetActionPerformed
    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancel;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSumit;
    private javax.swing.JButton btnUpload;
    private javax.swing.JComboBox cbWarranty;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JLabel lbImage;
    private javax.swing.JTextField txtImage;
    private javax.swing.JTextField txtMadein;
    private javax.swing.JTextField txtNameElevator;
    private javax.swing.JTextField txtPrice;
    private javax.swing.JTextField txtSpeed;
    private javax.swing.JTextField txtTypeElevator;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables

    private int height(float f) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }
}